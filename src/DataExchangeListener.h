// Copyright 2025 Artiom Khachaturian
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
#pragma once // DataExchangeListener.h
#include "livekit_models.pb.h"
#include <api/rtc_error.h>
#include <string>
#include <vector>

namespace LiveKitCpp
{

class DataChannel;

class DataExchangeListener
{
public:
    virtual void onSendError(const std::string& /*channelLabel*/, webrtc::RTCError /*error*/) {}
    virtual void onUserPacket(const std::string& /*participantSid*/,
                              const std::string& /*participantIdentity*/,
                              const std::string& /*payload*/,
                              const std::vector<std::string>& /*destinationIdentities*/,
                              const std::string& /*topic*/) {}
    virtual void onChatMessage(const std::string& /*remoteParticipantIdentity*/,
                               const std::string& /*message*/, // uuid
                               const std::string& /*id*/,
                               // time in milliseconds since the epoch (January 1, 1970, UTC)
                               int64_t /*timestamp*/,
                               bool /*deleted*/, // true to remove message
                               // true if the chat message has been generated by
                               // an agent from a participant's audio transcription
                               bool /*generated*/) {}
protected:
    virtual ~DataExchangeListener() = default;
};

} // namespace LiveKitCpp
